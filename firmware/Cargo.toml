[package]
name = "firmware"
version = "0.0.0"

license.workspace = true
authors.workspace = true
repository.workspace = true
categories.workspace = true
description = "Rust firmware for SlimeVR full-body-tracking"
keywords = ["slimevr", "full-body-tracking", "vr", "imu", "embassy"]

edition.workspace = true
rust-version.workspace = true


[features]
default = ["mcu-esp32c3", "imu-mpu6050", "log-rtt", "net-wifi"]
# default = [
#   "mcu-nrf52840",
#   "imu-stubbed",
#   "log-rtt",
#   "net-stubbed",
#   "nrf-boot-s140",
# ]
# default = ["mcu-esp32", "imu-stubbed", "log-uart", "net-wifi"]

# Supported microcontrollers
mcu-esp32 = [
  "dep:esp32-hal",
  "defmt_esp_println/esp32",
  "esp-backtrace/esp32",
  "xtensa-lx/esp32",
  "xtensa-lx-rt/esp32",
  "dep:esp-alloc",
  "dep:embedded-svc",
  "esp-wifi?/esp32",
]
mcu-esp32c3 = [
  "dep:esp32c3-hal",
  "defmt_esp_println/esp32c3",
  "esp-backtrace/esp32c3",
  "dep:riscv",
  "dep:riscv-rt",
  "dep:esp-alloc",
  "dep:embedded-svc",
  "esp-wifi?/esp32c3",
]
mcu-nrf52840 = [
  "embassy-nrf/nrf52840",
  "dep:embassy-usb",
  "nrf-softdevice?/nrf52840",
  "_mcu-f-nrf52",
  "dep:nrf52840-pac",
]
mcu-nrf52832 = [
  "embassy-nrf/nrf52832",
  "nrf-softdevice?/nrf52832",
  "_mcu-f-nrf52",
  "dep:nrf52832-pac",
]

# Wi-fi dependencies
net-wifi = ["esp-wifi/wifi", "dep:smoltcp"] # use wifi
net-ble = ["esp-wifi/ble", "dep:bleps"]
net-stubbed = []                            # Stubs out network

# Supported IMUs
imu-bmi160 = ["dep:bmi160"]
imu-mpu6050 = ["dep:mpu6050-dmp"]
imu-stubbed = []                  # Stubs out the IMU

# Supported defmt loggers
log-rtt = ["dep:defmt-rtt"]
log-usb-serial = ["defmt_esp_println?/jtag_serial"]
log-uart = ["defmt_esp_println?/uart"]

# Enable to flash without needing `espflash`
direct-boot = ["esp32c3-hal?/direct-boot"]

# nrf-specific bootloader choice
nrf-boot-none = ["cortex-m?/critical-section-single-core"]
nrf-boot-mbr = ["cortex-m?/critical-section-single-core"]
nrf-boot-s132 = ["nrf-softdevice/s132"]                    # use softdevice 132
nrf-boot-s140 = ["nrf-softdevice/s140"]                    # use softdevice 140

# All features with underscores are internal only, should not be used by other crates,
# and are not covered under semver guarantees.
# nrf52 family
_mcu-f-nrf52 = [
  "dep:cortex-m",
  "dep:cortex-m-rt",
  "dep:alloc-cortex-m",
  "embassy-nrf/time-driver-rtc1",
  "embassy-executor/integrated-timers",
  "defmt-bbq",
]

[dependencies]
# mcu-esp32 stuff
esp32-hal = { version = "0.7", optional = true, features = [
  "embassy",
  "embassy-time-timg0",
  "async",
] }

# mcu-esp32c3 stuff
esp32c3-hal = { version = "0.4", optional = true, features = [
  "embassy",
  "embassy-time-timg0",
  "async",
  #"direct-boot",
] }
riscv-rt = { version = "0.10", optional = true }
riscv = { version = "0.10", optional = true }

# mcu-f-nrf52 stuff
embassy-nrf = { version = "*", optional = true, default-features = false, features = [
  "nightly",          # For usb
  "time",
  "time-driver-rtc1",
] }
alloc-cortex-m = { version = "0.4", optional = true }
cortex-m = { version = "0.7", optional = true }
cortex-m-rt = { version = "0.7", optional = true }
nrf52840-pac = { version = "0.12", optional = true }
nrf52832-pac = { version = "0.12", optional = true }


# Async stuff
embassy-futures = "0.1.0"
embassy-executor = { version = "*", features = [
  "integrated-timers",
  "nightly",           # Needed for .spawn()
] }
embassy-time = { version = "*", features = [
  # "unstable-traits",
] }
embassy-usb = { version = "*", optional = true }
embassy-sync = { version = "*" }
futures-util = { version = "0.3", default-features = false }

# esp-xtensa stuff
xtensa-lx = { version = "0.7", optional = true, default-features = false }
xtensa-lx-rt = { version = "0.14", optional = true, default-features = false }

# esp-generic stuff
esp-backtrace = { version = "0.4", default-features = false, optional = true }
esp-alloc = { version = "0.1", optional = true }
defmt_esp_println = { path = "crates/defmt_esp_println", optional = true }

# Wi-Fi
esp-wifi = { git = "https://github.com/esp-rs/esp-wifi.git", rev = "d478a81", features = [
  "embedded-svc",
], optional = true }
smoltcp = { version = "0.8", default-features = false, features = [
  "async",
  "defmt",
  "socket-raw",
  "socket-udp",
  "socket-tcp",
  "socket-icmp",
  "socket-dhcpv4",
  "medium-ethernet",
  "proto-dhcpv4",
  "proto-igmp",
  "proto-ipv4",
], optional = true }

# Generic BLE
bleps = { git = "https://github.com/bjoernQ/bleps", rev = "06e1f7b", optional = true }

# nrf ble
nrf-softdevice = { version = "*", default-features = false, features = [
  "defmt",
  "ble-peripheral",
  "ble-central",
  "critical-section-impl",
], optional = true }

# Platform independent traits
embedded-hal = "0.2"
embedded-svc = { version = "0.23", default-features = false, optional = true, features = [
  # "defmt"
  # "nightly",
] }

# Logging
defmt = "0.3"
defmt-rtt = { version = "0.4", optional = true }
panic_defmt = { path = "crates/panic_defmt" }
defmt-bbq = { version = "0.1", optional = true }

# Peripheral drivers
mpu6050-dmp = { version = "0.2", optional = true }
bmi160 = { version = "0.1", optional = true }

# Other crates
static_cell = "1"
nb = "1"
nalgebra = { version = "0.31", default-features = false, features = [
  "macros",
  "libm",
] }
fugit = "0.3"
firmware_protocol = { path = "../networking/firmware_protocol", features = [
  "nalgebra031",
] }
load-dotenv = "0.1"
paste = "1.0"

[build-dependencies]
feature_utils = "0.0.0"
cfg_aliases = "0.1.1"
serde = { version = "1", features = ["derive"] }
toml = "0.5"
eyre = "0.6"
color-eyre = "0.6"


[patch.crates-io]
# Enable non-default I2C addresses and InitError
mpu6050-dmp = { git = "https://github.com/TheButlah/mpu6050-dmp-rs", rev = "77128a75a51547baadc0f0ef99aba4432e848f10" }
bmi160 = { git = "https://github.com/TheButlah/bmi160-rs", rev = "e99802b" }

# Emable use of `atomic-polyfill`
defmt = { git = "https://github.com/TheButlah/defmt", rev = "b5d5e316ea56250dcb25b3549bcf4bfdb1687796" }
defmt-rtt = { git = "https://github.com/TheButlah/defmt", rev = "b5d5e316ea56250dcb25b3549bcf4bfdb1687796" }

# Ensure we use the git version of all of the embassy stuff. Specify it here instead of
# in [dependencies] because this ensures that we don't duplicate any dependencies like
# `embassy-time`. This avoids bugs like this one:
# https://github.com/embassy-rs/embassy/issues/1115
embassy-executor = { git = "https://github.com/embassy-rs/embassy", rev = "ebc7350" }
embassy-time = { git = "https://github.com/embassy-rs/embassy", rev = "ebc7350" }
embassy-nrf = { git = "https://github.com/embassy-rs/embassy", rev = "ebc7350" }
embassy-usb = { git = "https://github.com/embassy-rs/embassy", rev = "ebc7350" }
embassy-sync = { git = "https://github.com/embassy-rs/embassy", rev = "ebc7350" }

nrf-softdevice = { git = "https://github.com/embassy-rs/nrf-softdevice", rev = "8a3dbb7" }

[profile.dev]
# lto doesnt work on esp32 (xtensa)
lto = false
# opt-level = "s"

# Necessary for esp-wifi to not be bugged
# https://github.com/esp-rs/esp-wifi/blob/9b644387a54a5ace93d4280f29075ad2a9e9a8ed/README.md#important
# https://github.com/esp-rs/esp-wifi/issues/88#issuecomment-1332363697
[profile.dev.package.esp-wifi]
opt-level = 3

# Recommended by the dependency itself
# https://github.com/esp-rs/xtensa-lx-rt/blob/455d2b77b8a5724d36db0ea66c88467a4515f376/README.md#i-get-linker-errors-when-i-build-for-debug
[profile.dev.package.xtensa-lx-rt]
opt-level = 'z'


###################
# Workspace stuff #
###################

[workspace]
resolver = "2"
members = ["crates/panic_defmt", "crates/defmt_esp_println"]

[workspace.package]
license = "MIT OR Apache-2.0"
authors = ["Ryan Butler <thebutlah@gmail.com>"]
repository = "https://github.com/SlimeVR/SlimeVR-Rust"
categories = ["no-std", "embedded"]

edition = "2021"
rust-version = "1.65"

[workspace.dependencies]
esp-println = { version = "0.3", default-features = false, features = [
  "critical-section", # Necessary because otherwise I'm very sus of the soundness
] }
